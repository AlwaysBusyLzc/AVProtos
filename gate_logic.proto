syntax = "proto3";
import "dev_gate.proto";

package messages;

//逻辑服务器信息列表
message LogicService {
    uint32  server_num = 1;
    uint32  maxCap = 5;
    string  name = 2;
    string  ip = 3;
    uint32  port = 4;
}

//网关服务器信息列表
message GateServiceInfo {
    string  name = 1;
    string  ip = 2;
    uint32  port =3;
}

//业务服务器在启动时向负载均衡服务请求获取相应的网关信息
message Logic2LoadBalanceGetGateInfoReq {
    LogicService    logic_service = 1;
    uint64          time = 2;
}

//负载均衡服务给业务服务器返回可用的网关信息
//返回的是一个GateService的数组，按照负载状况由低到高进行排序
//业务服务器轮询连接，只连接第一个成功的
message LoadBalance2LogicGateInfoRes {
    repeated GateServiceInfo gate_services = 1;
}

//service SearchGateService {
//    rpc Search (Logic2LoadBalanceGetGateInfoReq) returns (LoadBalance2LogicGateInfoRes);
//}

// 网关服务器通知业务服务器 接受连接成功并且创建了会话
message Gate2LogicConnectSuccessSyn {
    uint32 session_id = 1;
}

//业务服务器在启动时到网关的注册请求
message Logic2GateRegisterReq {
    uint32 service_num = 1;
    uint32 max_cap = 2;
    uint32 session_id = 3;
}

//网关给业务服务器返回注册结果
message Gate2LogicRegisterRes {
    uint32 service_num = 1;
    bool   success = 2;
    uint32 session_id = 3;
}

//业务服务器定时向网关汇报当前负载状况
message Logic2GateLoadStatus {
    LogicService logic_load_st = 1;
    uint32       current_cap = 2;
}

//网关将请求透传给业务服务器
message Gate2LogicStartAsrProcReq {
    string account_name = 1;
    string device_id = 2;
    uint32 channel_num = 3;
	string conf_id = 4;  // 请求开始一场新会议 0;   上传以前会议的数据填 有效的会议ID
    uint32 session_id = 5;
}

//逻辑服务器将应答网关，进行透传
message Logic2GateAsrProcRes {
    string conf_id = 1;
	enum error_no {
		success = 0;
		fail = 1;
	}
	error_no err = 2;
    uint32 session_id = 3;
}

//网关向业务处理服务器透传音频数据
message Gate2LogicAudioData {
    Dev2GateAudioData data = 1;
    uint32  session_id = 2;
}

message Gate2LogicOpenUserReq {
    uint32 session_id = 1;
}

message Logic2GateOpenUserRes {
    uint32 session_id = 1;
    bool isSuccess = 2;
}

message CloseUserReq {
    uint32 session_id = 1;
    enum closeReason {
        terminalReq = 0;        // 终端请求结束会议
        offlineOvertime = 1;    // 断线超时  规定的时间内没有断线重连成功
        avDataOvertime = 2;     // 长时间没有收到会议数据，结束会议
        logicErr = 3;           // 发生不可逆逻辑错误
    }
    closeReason reason = 2;
}